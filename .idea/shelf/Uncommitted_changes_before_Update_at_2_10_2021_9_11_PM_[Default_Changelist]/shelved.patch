Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion \"29.0.3\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.gurudattdahare.paintview\"\r\n        minSdkVersion 15\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'com.github.GURUDATTDAHARE:PaintView:0.0.4'\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 8d15790cdd501a1799013def7de9b02b4e36fc34)
+++ app/build.gradle	(date 1611226862401)
@@ -29,7 +29,7 @@
     testImplementation 'junit:junit:4.12'
     androidTestImplementation 'androidx.test.ext:junit:1.1.2'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
-    implementation 'com.github.GURUDATTDAHARE:PaintView:0.0.4'
+    implementation 'com.github.GURUDATTDAHARE:PaintView:0.0.6'
 
 
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n        <com.gurudattdahare.paint.PaintView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n            android:id=\"@+id/paintview\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <Button\r\n            android:id=\"@+id/red\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"#EE004B\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/blue\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"#00CAEE\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/green\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"#34EE00\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/yellow\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"#EEC600\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/black\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"#0C0910\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/eresor\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"@drawable/ereser\" />\r\n\r\n        <Button\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:id=\"@+id/size\"\r\n            android:background=\"@drawable/brush\" />\r\n\r\n<!--   add other buttons  -->\r\n\r\n        <Button\r\n            android:id=\"@+id/clear\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"@drawable/clear\" />\r\n\r\n\r\n    </com.gurudattdahare.paint.PaintView>\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision 8d15790cdd501a1799013def7de9b02b4e36fc34)
+++ app/src/main/res/layout/activity_main.xml	(date 1611226956476)
@@ -25,37 +25,43 @@
             android:id="@+id/blue"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
-            android:background="#00CAEE" />
+            android:background="#00CAEE"
+            />
 
         <Button
             android:id="@+id/green"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
-            android:background="#34EE00" />
+            android:background="#34EE00"
+            />
 
         <Button
             android:id="@+id/yellow"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
-            android:background="#EEC600" />
+            android:background="#EEC600"
+           />
 
         <Button
             android:id="@+id/black"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
-            android:background="#0C0910" />
+            android:background="#0C0910"
+            />
 
         <Button
             android:id="@+id/eresor"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
-            android:background="@drawable/ereser" />
+            android:background="@drawable/ereser"
+            />
 
         <Button
             android:layout_width="match_parent"
             android:layout_height="match_parent"
             android:id="@+id/size"
-            android:background="@drawable/brush" />
+            android:background="@drawable/brush"
+            />
 
 <!--   add other buttons  -->
 
@@ -63,7 +69,9 @@
             android:id="@+id/clear"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
-            android:background="@drawable/clear" />
+            android:background="@drawable/clear"
+
+            />
 
 
     </com.gurudattdahare.paint.PaintView>
Index: app/src/main/res/layout/test.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><merge xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n\r\n    <SeekBar\r\n        android:id=\"@+id/seekBar\"\r\n        android:layout_width=\"230dp\"\r\n        android:layout_height=\"40dp\"\r\n        />\r\n\r\n</merge>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/test.xml	(revision 8d15790cdd501a1799013def7de9b02b4e36fc34)
+++ app/src/main/res/layout/test.xml	(date 1611213025703)
@@ -5,5 +5,10 @@
         android:layout_width="230dp"
         android:layout_height="40dp"
         />
+    <ImageView
+        android:layout_width="100dp"
+        android:layout_height="130dp"
+        android:id="@+id/abs"
+        android:src="@drawable/instagram"/>
 
 </merge>
\ No newline at end of file
Index: app/src/main/java/com/gurudattdahare/paintview/V.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.gurudattdahare.paintview;\r\nimport android.content.Context;\r\nimport android.content.res.Configuration;\r\nimport android.util.AttributeSet;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.SeekBar;\r\npublic class V extends ViewGroup {\r\n    private SeekBar seekBar;\r\n    private example example;\r\n    private Boolean visibleORnot=false;\r\n    private boolean Landscape;\r\n    private SeekBar.OnSeekBarChangeListener listener=new SeekBar.OnSeekBarChangeListener() {\r\n        @Override\r\n        public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\r\n            example.brushsize(Float.valueOf(progress));\r\n        }\r\n\r\n        @Override\r\n        public void onStartTrackingTouch(SeekBar seekBar) {\r\n\r\n        }\r\n\r\n        @Override\r\n        public void onStopTrackingTouch(SeekBar seekBar) {\r\n\r\n        }\r\n    };\r\n    public V(Context context) {\r\n        super(context);\r\n        guru(context);\r\n    }\r\n\r\n    public V(Context context, AttributeSet attrs) {\r\n        super(context, attrs);\r\n      guru(context);\r\n    }\r\n    public void guru(Context context){\r\n        example=new example(context);\r\n        addView(example);\r\n        LayoutInflater.from(getContext()).inflate(R.layout.test,this);\r\n        seekBar=findViewById(R.id.seekBar);\r\n        seekBar.setOnSeekBarChangeListener(listener);\r\n        seekBar.setVisibility(INVISIBLE);\r\n    }\r\n\r\n    @Override\r\n    protected void onLayout(boolean changed, int l, int t, int r, int b) {\r\n        int count=getChildCount();\r\n        int leftPadding=getPaddingLeft();\r\n        int rightPadding=getPaddingRight();\r\n        int topPadding=getPaddingTop();\r\n        int bottomPadding=getPaddingBottom();\r\n\r\n        int hight= getMeasuredHeight()-(topPadding+bottomPadding);\r\n        int width= getMeasuredWidth()-(leftPadding+rightPadding);\r\n\r\n        int startX=leftPadding;\r\n        int startY=topPadding;\r\n       for (int i = 0; i < count; i++) {\r\n           View child = getChildAt(i);\r\n           if (child.getVisibility() != GONE) {\r\n               if (i == 0) {\r\n                   child.measure(MeasureSpec.makeMeasureSpec(width, MeasureSpec.AT_MOST),\r\n                           MeasureSpec.makeMeasureSpec(hight * 11 / 12, MeasureSpec.AT_MOST));\r\n                   int childhight = child.getMeasuredHeight();\r\n                   int childwidth = child.getMeasuredWidth();\r\n                   child.layout(startX, startY, leftPadding + childwidth, topPadding + childhight);\r\n                   startX = startX + width / 25;\r\n                   startY = startY + childhight + hight / 48;\r\n                   //  example=findViewById(child.getId());\r\n\r\n               } else if (i == 1) {\r\n                   seekBar.measure(MeasureSpec.makeMeasureSpec(width, MeasureSpec.AT_MOST), MeasureSpec.makeMeasureSpec(100, MeasureSpec.AT_MOST));\r\n                   seekBar.layout(0, 30, width, 30 + 100);\r\n               } else {\r\n                   child.measure(MeasureSpec.makeMeasureSpec(2 * width / 25, MeasureSpec.AT_MOST),\r\n                           MeasureSpec.makeMeasureSpec(2 * hight / 48, MeasureSpec.AT_MOST));\r\n                   int childhight = child.getMeasuredHeight();\r\n                   int childwidth = child.getMeasuredWidth();\r\n                   child.layout(startX, startY, startX + childwidth, startY + childhight);\r\n                   startX = startX + 3 * width / 25;\r\n\r\n               }\r\n           }\r\n       }\r\n\r\n    }\r\n     public void Red()\r\n     {\r\n         example.red();\r\n     }\r\n     public void Blue(){\r\n         example.blue();\r\n     }\r\n     public void Yellow(){\r\n         example.yellow();\r\n     }\r\n     public void Eresor(){\r\n        example.eresor();\r\n\r\n     }\r\n     public void BrushSize(){\r\n        if (!visibleORnot) {\r\n            seekBar.setVisibility(VISIBLE);\r\n            visibleORnot=true;\r\n        }else {\r\n            seekBar.setVisibility(INVISIBLE);\r\n            visibleORnot=false;\r\n        }\r\n     }\r\n     public void Black(){\r\n        example.black();\r\n     }\r\n     public void Green(){\r\n        example.green();\r\n     }\r\n     public void ClearScreen(){\r\n         example.clear();\r\n     }\r\n\r\n    @Override\r\n    protected void onConfigurationChanged(Configuration newConfig) {\r\n        super.onConfigurationChanged(newConfig);\r\n        if(newConfig.orientation==Configuration.ORIENTATION_LANDSCAPE){\r\n            Landscape=true;\r\n            Log.d(\"guru\",\" landscape \");\r\n        }else if(newConfig.orientation==Configuration.ORIENTATION_PORTRAIT){\r\n            Landscape=false;\r\n            Log.d(\"guru\",\" potrait \");\r\n\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/gurudattdahare/paintview/V.java	(revision 8d15790cdd501a1799013def7de9b02b4e36fc34)
+++ app/src/main/java/com/gurudattdahare/paintview/V.java	(date 1611212942460)
@@ -6,12 +6,14 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.ImageView;
 import android.widget.SeekBar;
 public class V extends ViewGroup {
     private SeekBar seekBar;
     private example example;
     private Boolean visibleORnot=false;
     private boolean Landscape;
+    private ImageView imageView;
     private SeekBar.OnSeekBarChangeListener listener=new SeekBar.OnSeekBarChangeListener() {
         @Override
         public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
@@ -44,6 +46,10 @@
         seekBar=findViewById(R.id.seekBar);
         seekBar.setOnSeekBarChangeListener(listener);
         seekBar.setVisibility(INVISIBLE);
+        imageView=findViewById(R.id.abs);
+//        imageView=new ImageView(context);
+//        imageView.setImageResource(R.drawable.instagram);
+//        addView(imageView);
     }
 
     @Override
@@ -56,37 +62,69 @@
 
         int hight= getMeasuredHeight()-(topPadding+bottomPadding);
         int width= getMeasuredWidth()-(leftPadding+rightPadding);
+        Log.d("hello"," h "+hight+" w "+width);
+//        if (Landscape) {
+//            int temp=hight;
+//            hight=width;
+//            width=temp;
+//        }
+
 
         int startX=leftPadding;
         int startY=topPadding;
-       for (int i = 0; i < count; i++) {
-           View child = getChildAt(i);
-           if (child.getVisibility() != GONE) {
-               if (i == 0) {
-                   child.measure(MeasureSpec.makeMeasureSpec(width, MeasureSpec.AT_MOST),
-                           MeasureSpec.makeMeasureSpec(hight * 11 / 12, MeasureSpec.AT_MOST));
-                   int childhight = child.getMeasuredHeight();
-                   int childwidth = child.getMeasuredWidth();
-                   child.layout(startX, startY, leftPadding + childwidth, topPadding + childhight);
-                   startX = startX + width / 25;
-                   startY = startY + childhight + hight / 48;
-                   //  example=findViewById(child.getId());
+
+            for (int i = 0; i < count; i++) {
+                View child = getChildAt(i);
+                if (child.getVisibility() != GONE) {
+          //          if (!Landscape){
+                        if (i == 0) {
+                        child.measure(MeasureSpec.makeMeasureSpec(width, MeasureSpec.AT_MOST),
+                                MeasureSpec.makeMeasureSpec(hight * 11 / 12, MeasureSpec.AT_MOST));
+                        int childhight = child.getMeasuredHeight();
+                        int childwidth = child.getMeasuredWidth();
+                        child.layout(startX, startY, leftPadding + childwidth, topPadding + childhight);
+                        startX = startX + width / 25;
+                        startY = startY + childhight + hight / 48;
+                        //  example=findViewById(child.getId());
 
-               } else if (i == 1) {
-                   seekBar.measure(MeasureSpec.makeMeasureSpec(width, MeasureSpec.AT_MOST), MeasureSpec.makeMeasureSpec(100, MeasureSpec.AT_MOST));
-                   seekBar.layout(0, 30, width, 30 + 100);
-               } else {
-                   child.measure(MeasureSpec.makeMeasureSpec(2 * width / 25, MeasureSpec.AT_MOST),
-                           MeasureSpec.makeMeasureSpec(2 * hight / 48, MeasureSpec.AT_MOST));
-                   int childhight = child.getMeasuredHeight();
-                   int childwidth = child.getMeasuredWidth();
-                   child.layout(startX, startY, startX + childwidth, startY + childhight);
-                   startX = startX + 3 * width / 25;
+                    } else if (i == 1) {
+
+                        seekBar.measure(MeasureSpec.makeMeasureSpec(width, MeasureSpec.AT_MOST), MeasureSpec.makeMeasureSpec(100, MeasureSpec.AT_MOST));
+                        seekBar.layout(0, 30, width, 30 + 100);
+                    } else if (i==2){
+                            imageView.measure(MeasureSpec.makeMeasureSpec(width, MeasureSpec.AT_MOST), MeasureSpec.makeMeasureSpec(100, MeasureSpec.AT_MOST));
+                            imageView.layout(100, 130, width, 30 + 100);
+                        }
+                        else {
+                        child.measure(MeasureSpec.makeMeasureSpec(2 * width / 25, MeasureSpec.AT_MOST),
+                                MeasureSpec.makeMeasureSpec(2 * hight / 48, MeasureSpec.AT_MOST));
+                        int childhight = child.getMeasuredHeight();
+                        int childwidth = child.getMeasuredWidth();
+                        child.layout(startX, startY, startX + childwidth, startY + childhight);
+                        startX = startX + 3 * width / 25;
 
-               }
-           }
-       }
-
+                    }
+//                }
+//                    else {
+//                        if(i==0){
+//                            child.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(hight,MeasureSpec.AT_MOST));
+//                            int childhight=child.getMeasuredHeight();
+//                            int childwidth=child.getMeasuredWidth();
+//                            child.layout(startX,startY,startX+childwidth,startY+childhight);
+//                            startX=startX+width*7/8;
+//                            startY=startY+10;
+//                        }
+//                        if (i==1){
+//                            continue;
+//                        }else {
+//                            child.measure(MeasureSpec.makeMeasureSpec(50,MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(50,MeasureSpec.AT_MOST));
+//                            int childhight = child.getMeasuredHeight();
+//                            int childwidth = child.getMeasuredWidth();
+//                            child.layout(startX,startY,startX+childwidth,startY+childhight);
+//                        }
+//                    }
+            }
+        }
     }
      public void Red()
      {
@@ -126,11 +164,22 @@
         super.onConfigurationChanged(newConfig);
         if(newConfig.orientation==Configuration.ORIENTATION_LANDSCAPE){
             Landscape=true;
-            Log.d("guru"," landscape ");
+            Log.d("guru1"," landscape ");
         }else if(newConfig.orientation==Configuration.ORIENTATION_PORTRAIT){
             Landscape=false;
-            Log.d("guru"," potrait ");
+            Log.d("guru1"," potrait ");
 
+        }
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+        Log.d("guru1","h "+getMeasuredHeight()+" w "+getMeasuredWidth());
+        if(getMeasuredWidth()<getMeasuredHeight()){
+            Landscape=false;
+        }else {
+            Landscape=true;
         }
     }
 }
Index: app/src/main/java/com/gurudattdahare/paintview/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.gurudattdahare.paintview;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\nimport com.gurudattdahare.paint.PaintView;\r\n\r\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener{\r\n   private PaintView paintView;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        paintView =findViewById(R.id.paintview);\r\n        Button b=findViewById(R.id.red);\r\n       Button b2=findViewById(R.id.blue);\r\n       Button b3=findViewById(R.id.green);\r\n       Button b4=findViewById(R.id.yellow);\r\n       Button b5=findViewById(R.id.black);\r\n       Button b6=findViewById(R.id.eresor);\r\n       Button b7 =findViewById(R.id.clear);\r\n       Button b8=findViewById(R.id.size);\r\n\r\n       b.setOnClickListener(this);\r\n       b2.setOnClickListener(this);\r\n       b3.setOnClickListener(this);\r\n       b4.setOnClickListener(this);\r\n       b5.setOnClickListener(this);\r\n       b6.setOnClickListener(this);\r\n       b7.setOnClickListener(this);\r\n       b8.setOnClickListener(this);\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()){\r\n            case R.id.red:\r\n                paintView.Red();\r\n                break;\r\n            case R.id.blue:\r\n                paintView.Blue();\r\n                break;\r\n            case R.id.green:\r\n                paintView.Green();\r\n                break;\r\n            case R.id.yellow:\r\n                paintView.Yellow();\r\n                break;\r\n            case R.id.black:\r\n                paintView.Black();\r\n                break;\r\n            case R.id.eresor:\r\n                paintView.Eresor();\r\n                break;\r\n            case  R.id.clear:\r\n                paintView.ClearScreen();\r\n                break;\r\n                case R.id.size:\r\n              paintView.BrushSize();\r\n            break;\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/gurudattdahare/paintview/MainActivity.java	(revision 8d15790cdd501a1799013def7de9b02b4e36fc34)
+++ app/src/main/java/com/gurudattdahare/paintview/MainActivity.java	(date 1611226956494)
@@ -8,6 +8,7 @@
 
 import com.gurudattdahare.paint.PaintView;
 
+
 public class MainActivity extends AppCompatActivity implements View.OnClickListener{
    private PaintView paintView;
     @Override
@@ -55,7 +56,7 @@
                 paintView.Black();
                 break;
             case R.id.eresor:
-                paintView.Eresor();
+                paintView.Ereser();
                 break;
             case  R.id.clear:
                 paintView.ClearScreen();
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 8d15790cdd501a1799013def7de9b02b4e36fc34)
+++ .idea/misc.xml	(date 1612969835332)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1612969835582)
+++ .idea/compiler.xml	(date 1612969835582)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="1.8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/Paint\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 8d15790cdd501a1799013def7de9b02b4e36fc34)
+++ .idea/gradle.xml	(date 1612969835660)
@@ -16,6 +16,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
